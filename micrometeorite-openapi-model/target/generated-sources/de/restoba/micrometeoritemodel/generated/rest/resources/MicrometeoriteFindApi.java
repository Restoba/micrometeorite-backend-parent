/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package de.restoba.micrometeoritemodel.generated.rest.resources;

import de.restoba.micrometeoritemodel.generated.rest.model.MicrometeoriteFind;
import de.restoba.micrometeoritemodel.generated.rest.model.PredictionResult;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-09-23T22:17:02.762499800+02:00[Europe/Berlin]")
@Api(value = "micrometeoriteFind", description = "the micrometeoriteFind API")
public interface MicrometeoriteFindApi {

    Logger log = LoggerFactory.getLogger(MicrometeoriteFindApi.class);

    Optional<ObjectMapper> getObjectMapper();

    Optional<HttpServletRequest> getRequest();

    

    @ApiOperation(value = "Add micrometeorite find", nickname = "addMicrometeoriteFind", notes = "Add micrometeorite find", response = PredictionResult.class, tags={ "micrometeoriteFind", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Micrometeorite Finding created", response = PredictionResult.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/micrometeoriteFind",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<PredictionResult> addMicrometeoriteFind(@ApiParam(value = "MicrometeoriteFind object that needs to be added" ,required=true )  @Valid @RequestBody MicrometeoriteFind body
);


    @ApiOperation(value = "Returns all micrometeorite Findings", nickname = "getAllMicrometeoriteFinds", notes = "", response = MicrometeoriteFind.class, responseContainer = "List", tags={ "micrometeoriteFind", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Return all Micrometeorite Findings", response = MicrometeoriteFind.class, responseContainer = "List") })
    @RequestMapping(value = "/micrometeoriteFind",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<MicrometeoriteFind>> getAllMicrometeoriteFinds();

}
